:initR

-- Should be: [1] 1
Foreign.R.printValue $ H.Prelude.eval [r| 1 |]

-- Should be: [1] 2
Foreign.R.printValue $ H.Prelude.eval [r| 1 + 1 |]

-- Should be: [1] "1" "2" "3"
Foreign.R.printValue $ H.Prelude.eval [r| c(1,2,"3") |]

-- Should be: [1] 2
Foreign.R.printValue $ H.Prelude.eval [r| x <- 2 |]

-- Should be: [1] 3
Foreign.R.printValue $ H.Prelude.eval [r| x+1 |]

---- Should be: [1] 6
let y = (5::Double)
Foreign.R.printValue $ H.Prelude.eval [r| y_hs + 1 |]

---- Should be: Closure ???
Foreign.R.printValue $ H.Prelude.eval [r| function(y) y_hs + y |]

-- Should be 8
Foreign.R.printValue $ H.Prelude.eval [r| z <- function(y) y_hs + y |]
Foreign.R.printValue $ H.Prelude.eval [r| z(3) |]

